{
  "name": "functional-node",
  "description": "a port of the Functional Javascript library",
  "version": "1.0.2",
  "author": {
    "name": "Oliver Steele, Samuel Bailey",
    "email": "sam@bailey.geek.nz"
  },
  "license": "MIT",
  "main": "./functional.js",
  "engine": {
    "node": ">=0.6.19"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bailus/functional-node.git"
  },
  "readme": "functional-node is a port of the Functional Javascript library.\n https://github.com/bailus/functional-node\n\nFunctional defines higher-order methods and functions for functional\nand function-level programming.  It also defines \"string lambdas\",\nthat allow strings such as `x+1` and `x -> x+1` to be used in some\ncontexts as functions.\n\nIt is licensed under the MIT License.\n\nFor more details, see \n http://osteele.com/javascripts/functional\n\nCredits:\n - Samuel Bailey <sam@bailey.geek.nz> -- node.js port\n - Oliver Steele -- original author\n - Dean Edwards -- Array.slice suggestion\n - henrah -- Function.lambda memoization\n - Raganwald -- Rhino compatibility\n - Jesse Hallett -- Spidermonkey shell compatibiilty\n\nUsage:\n//load the Functional.* methods into the global namespace:\nglobal.Functional = require('functional-node').load();\nFunctional.curry('a/b', 1)(2);\n → 0.5\n\n//or inject the Functional.* methods directly into the global namespace:\nrequire('functional-node').load().install();\ncurry('a/b', 1)(2);\n → 0.5\n\n//or load Functional without touching the global namespace:\nvar Functional = require('functional-node').load();\nFunctional.curry('a/b', 1)(2);\n → 0.5\n\nRun tests:\n$ node debugify.js -f ./tests.js\n\nRun examples:\n$ node debugify.js -f ./examples.js\n",
  "_id": "functional-node@1.0.2",
  "dist": {
    "shasum": "94245cddb2c853f55f03c4002864594f5a0495ae"
  },
  "_from": "functional-node"
}
